//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.operationbased2_ex8.fragment

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.IntAdapter
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.evaluate
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import com.apollographql.apollo3.api.possibleTypes
import kotlin.Int
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object AnimalFragmentImpl_ResponseAdapter {
  public object AnimalFragment : Adapter<com.example.operationbased2_ex8.fragment.AnimalFragment> {
    public val RESPONSE_NAMES: List<String> = listOf("species", "parent")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.example.operationbased2_ex8.fragment.AnimalFragment {
      var _species: String? = null
      var _parent: com.example.operationbased2_ex8.fragment.AnimalFragment.Parent? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _species = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _parent = Parent.obj(true).fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return com.example.operationbased2_ex8.fragment.AnimalFragment(
        species = _species!!,
        parent = _parent!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.example.operationbased2_ex8.fragment.AnimalFragment,
    ): Unit {
      writer.name("species")
      StringAdapter.toJson(writer, customScalarAdapters, value.species)

      writer.name("parent")
      Parent.obj(true).toJson(writer, customScalarAdapters, value.parent)
    }
  }

  public object Parent : Adapter<com.example.operationbased2_ex8.fragment.AnimalFragment.Parent> {
    public val RESPONSE_NAMES: List<String> = listOf("__typename", "species")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.example.operationbased2_ex8.fragment.AnimalFragment.Parent {
      var __typename: String? = null
      var _species: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _species = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      check(__typename != null) {
        "__typename was not found"
      }

      var _asLion: com.example.operationbased2_ex8.fragment.AnimalFragment.AsLion? = null
      if (possibleTypes("Lion").evaluate(customScalarAdapters.adapterContext.variables(), __typename, customScalarAdapters.adapterContext, null)) {
        reader.rewind()
        _asLion = com.example.operationbased2_ex8.fragment.AnimalFragmentImpl_ResponseAdapter.AsLion.fromJson(reader,
            customScalarAdapters)
      }

      var _asCat: com.example.operationbased2_ex8.fragment.AnimalFragment.AsCat? = null
      if (possibleTypes("Cat").evaluate(customScalarAdapters.adapterContext.variables(), __typename, customScalarAdapters.adapterContext, null)) {
        reader.rewind()
        _asCat = com.example.operationbased2_ex8.fragment.AnimalFragmentImpl_ResponseAdapter.AsCat.fromJson(reader,
            customScalarAdapters)
      }

      return com.example.operationbased2_ex8.fragment.AnimalFragment.Parent(
        __typename = __typename,
        species = _species!!,
        asLion = _asLion,
        asCat = _asCat
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.example.operationbased2_ex8.fragment.AnimalFragment.Parent,
    ): Unit {
      writer.name("__typename")
      StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

      writer.name("species")
      StringAdapter.toJson(writer, customScalarAdapters, value.species)

      if (value.asLion != null) {
        com.example.operationbased2_ex8.fragment.AnimalFragmentImpl_ResponseAdapter.AsLion.toJson(writer,
            customScalarAdapters, value.asLion)
      }

      if (value.asCat != null) {
        com.example.operationbased2_ex8.fragment.AnimalFragmentImpl_ResponseAdapter.AsCat.toJson(writer,
            customScalarAdapters, value.asCat)
      }
    }
  }

  public object AsLion : Adapter<com.example.operationbased2_ex8.fragment.AnimalFragment.AsLion> {
    public val RESPONSE_NAMES: List<String> = listOf("__typename", "species", "temperature")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.example.operationbased2_ex8.fragment.AnimalFragment.AsLion {
      var __typename: String? = null
      var _species: String? = null
      var _temperature: Int? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _species = StringAdapter.fromJson(reader, customScalarAdapters)
          2 -> _temperature = IntAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return com.example.operationbased2_ex8.fragment.AnimalFragment.AsLion(
        __typename = __typename!!,
        species = _species!!,
        temperature = _temperature!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.example.operationbased2_ex8.fragment.AnimalFragment.AsLion,
    ): Unit {
      writer.name("__typename")
      StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

      writer.name("species")
      StringAdapter.toJson(writer, customScalarAdapters, value.species)

      writer.name("temperature")
      IntAdapter.toJson(writer, customScalarAdapters, value.temperature)
    }
  }

  public object AsCat : Adapter<com.example.operationbased2_ex8.fragment.AnimalFragment.AsCat> {
    public val RESPONSE_NAMES: List<String> = listOf("__typename", "species", "name")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        com.example.operationbased2_ex8.fragment.AnimalFragment.AsCat {
      var __typename: String? = null
      var _species: String? = null
      var _name: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _species = StringAdapter.fromJson(reader, customScalarAdapters)
          2 -> _name = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return com.example.operationbased2_ex8.fragment.AnimalFragment.AsCat(
        __typename = __typename!!,
        species = _species!!,
        name = _name!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: com.example.operationbased2_ex8.fragment.AnimalFragment.AsCat,
    ): Unit {
      writer.name("__typename")
      StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

      writer.name("species")
      StringAdapter.toJson(writer, customScalarAdapters, value.species)

      writer.name("name")
      StringAdapter.toJson(writer, customScalarAdapters, value.name)
    }
  }
}
